function myPipe = bss_supervised(varargin)
% BSS_SUPERVISED - Fully supervised BSS-based artifact rejection



mySel = pset.selector.cascade(...
    pset.selector.sensor_class('Class', 'EEG'), pset.selector.good_data);
myPCA = spt.pca(...
    'RetainedVar',  99.975, ...
    'MinCard',      @(lambda) min(20, max(2, 0.15*numel(lambda))), ...
    'MaxCard',      35);

myFeat = spt.feature.bp_var;

myCrit = spt.criterion.threshold(...
    'MaxCard', 0, ...  % Do not reject anything automatically
    'Feature', myFeat ...
    );

% A multicombi node
myNode1 = meegpipe.node.bss.new(...
    'BSS',          spt.bss.multicombi, ...
    'Criterion',    myCrit, ...
    'DataSelector', mySel, ...
    'PCA',          myPCA, ...
    'Name',         'multicombi', ...
    varargin{:});

% An EFICA node
myNode2 = meegpipe.node.bss.new(...
    'BSS',          spt.bss.efica, ...
    'Criterion',    myCrit, ...
    'DataSelector', mySel, ...
    'PCA',          myPCA, ...
    'Name',         'efica', ...
    varargin{:});

% JADE BSS, use less PCs because JADE scales poorly with data
% dimensionality
myPCA = spt.pca(...
    'RetainedVar',  99.95, ...
    'MinCard',      @(lambda) min(15, max(2, 0.15*numel(lambda))), ...
    'MaxCard',      25);
myNode3 = meegpipe.node.bss.new(...
    'BSS',          spt.bss.jade, ...
    'Criterion',    myCrit, ...
    'DataSelector', mySel, ...
    'PCA',          myPCA, ...
    'Name',         'jade', ...
    varargin{:});
 
% runica node, use lower dimensionality, runica is sooo slow
myPCA = spt.pca(...
    'RetainedVar',  99.95, ...
    'MinCard',      @(lambda) min(15, max(2, 0.15*numel(lambda))), ...
    'MaxCard',      25);
myNode4 = meegpipe.node.bss.new(...
    'BSS',          spt.bss.runica, ...
    'Criterion',    myCrit, ...
    'DataSelector', mySel, ...
    'PCA',          myPCA, ...
    'Name',         'runica', ...
    varargin{:});

% amica node, use lower dimensionality, amica is sooo slow
myPCA = spt.pca(...
    'RetainedVar',  99.95, ...
    'MinCard',      @(lambda) min(15, max(2, 0.15*numel(lambda))), ...
    'MaxCard',      25);
myNode5 = meegpipe.node.bss.new(...
    'BSS',          spt.bss.amica, ...
    'Criterion',    myCrit, ...
    'DataSelector', mySel, ...
    'PCA',          myPCA, ...
    'Name',         'amica', ...
    varargin{:});

myPipe = meegpipe.node.pipeline.new(...
    'NodeList', {myNode1, myNode2, myNode3, myNode4, myNode5}, ...
    'Name', 'bss-supervised');


end