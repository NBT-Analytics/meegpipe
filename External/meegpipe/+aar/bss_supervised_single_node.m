function myNode = bss_supervised_single_node(varargin)

import misc.process_arguments;
import misc.split_arguments;

opt.MinCard = @(lambda) min(20, max(2, 0.15*numel(lambda)));
opt.RetainedVar = 99.99;
opt.MaxCard = 35;

[thisArgs, varargin] = split_arguments(opt, varargin);
[~, opt] = process_arguments(opt, thisArgs);

mySel = pset.selector.cascade(...
    pset.selector.sensor_class('Class', 'EEG'), pset.selector.good_data);
myPCA = spt.pca(...
    'RetainedVar',  opt.RetainedVar, ...
    'MinCard',      opt.MinCard, ...
    'MaxCard',      opt.MaxCard);

myFeat = spt.feature.bp_var;

myCrit = spt.criterion.threshold(...
    'MaxCard', 0, ...  % Do not reject anything automatically
    'Feature', myFeat ...
    );

% A multicombi node
myNode = meegpipe.node.bss.new(...
    'BSS',          spt.bss.multicombi, ...
    'Criterion',    myCrit, ...
    'DataSelector', mySel, ...
    'PCA',          myPCA, ...
    'Name',         'bss-supervised', ...
    varargin{:});

end